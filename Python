# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

# Load the dataset
file_path = r'C:\Users\USER\Downloads\CVD_cleaned (1).csv'

# Read the CSV file
data = pd.read_csv(file_path)

# Data preprocessing
# Encode categorical variables
label_encoder = LabelEncoder()
data['Checkup'] = label_encoder.fit_transform(data['Checkup'])
data['Exercise'] = label_encoder.fit_transform(data['Exercise'])
data['Sex'] = label_encoder.fit_transform(data['Sex'])
data['Age_Category'] = label_encoder.fit_transform(data['Age_Category'])
data['Smoking_History'] = label_encoder.fit_transform(data['Smoking_History'])
data['Alcohol_Consumption'] = label_encoder.fit_transform(data['Alcohol_Consumption'])

# Define features and target variable
X = data.drop(['General_Health', 'Heart_Disease', 'Skin_Cancer', 'Other_Cancer', 'Depression', 'Diabetes', 'Arthritis'], axis=1)
y = data['General_Health']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Feature scaling
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Initialize and train the Random Forest model
rf_model = RandomForestClassifier()
rf_model.fit(X_train_scaled, y_train)

# Make predictions using Random Forest model
rf_predictions = rf_model.predict(X_test_scaled)

# Evaluate the Random Forest model
rf_accuracy = accuracy_score(y_test, rf_predictions)
print("Random Forest Accuracy:", rf_accuracy)

# Initialize and train the SVM model
svm_model = SVC()
svm_model.fit(X_train_scaled, y_train)

# Make predictions using SVM model
svm_predictions = svm_model.predict(X_test_scaled)

# Evaluate the SVM model
svm_accuracy = accuracy_score(y_test, svm_predictions)
print("SVM Accuracy:", svm_accuracy)
